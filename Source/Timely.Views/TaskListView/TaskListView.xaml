<UserControl x:Class="Timely.Views.TaskListView.TaskListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sampleData="clr-namespace:Timely.ViewModels.TaskList.SampleData;assembly=Timely.ViewModels"
             xmlns:taskListView="clr-namespace:Timely.Views.TaskListView"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=sampleData:SampleTaskListViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.Resources>
            <taskListView:TimeToHoursConverter x:Key="timeToStringConverter" />
            <taskListView:TimeToHmsAndHoursConverter x:Key="timeToHmsAndStringConverter" />
            <Style x:Key="alternatingStyle" TargetType="{x:Type DataGridRow}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="AliceBlue"></Setter>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="Delete" Command="{Binding Path=DeleteSelectedTaskCommand}"/>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <DataGrid ItemsSource="{Binding Items}" 
                  AlternationCount="2" 
                  AutoGenerateColumns="False"
                  ItemContainerStyle="{StaticResource alternatingStyle}"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  SelectedItem="{Binding SelectedItem}" 
                  RowHeaderWidth="0"
                  GridLinesVisibility="None">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader" x:Key="rightAlignHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                </Style>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF8C00"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FFFFDC"/>
            </DataGrid.Resources>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding Path=DeleteSelectedTaskCommand}"/>
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="" Width="SizeToCells" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Height="16">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Source" Value="pack://application:,,,/Timely.Views;component/Resources/button_grey_play.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <!--<TextBlock FontFamily="Marlett" Text="{Binding IsActive, Converter={StaticResource activeTaskIndicatorValueConverter}}" HorizontalAlignment="Center"/>-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Description" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Header}" Margin="3,0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Today" Width="SizeToCells" IsReadOnly="True" HeaderStyle="{StaticResource rightAlignHeader}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TodayTime, Converter={StaticResource timeToHmsAndStringConverter}}" HorizontalAlignment="Right" Margin="3,0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Total" Width="SizeToHeader" IsReadOnly="True" HeaderStyle="{StaticResource rightAlignHeader}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding TotalTime, Converter={StaticResource timeToStringConverter}}" HorizontalAlignment="Right" Margin="3,0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
